// <auto-generated />
using System;
using Aqua_Sharp_Backend.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aqua_Sharp_Backend.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230223121948_seederconfig8")]
    partial class seederconfig8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Entities.Aquarium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("Dawn")
                        .HasColumnType("time without time zone");

                    b.Property<long>("Height")
                        .HasColumnType("bigint");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PH")
                        .HasColumnType("real");

                    b.Property<TimeOnly>("Sunset")
                        .HasColumnType("time without time zone");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<long>("Width")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Aquarium");
                });

            modelBuilder.Entity("Models.Entities.Config", b =>
                {
                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("FirstRun")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("password");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Models.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AquariumId")
                        .HasColumnType("integer");

                    b.Property<bool>("ManualMode")
                        .HasColumnType("boolean");

                    b.Property<long>("MeasurementFrequency")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AquariumId")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Models.Entities.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("LightOn")
                        .HasColumnType("boolean");

                    b.Property<long>("TDS")
                        .HasColumnType("bigint");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("Models.Entities.Device", b =>
                {
                    b.HasOne("Models.Entities.Aquarium", "Aquarium")
                        .WithOne("Device")
                        .HasForeignKey("Models.Entities.Device", "AquariumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aquarium");
                });

            modelBuilder.Entity("Models.Entities.Aquarium", b =>
                {
                    b.Navigation("Device")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
